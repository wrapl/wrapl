GMP_VERSION := "6.1.2"
var GMP_DIR := file('gmp-{GMP_VERSION}')
var GMP_LIB := EXT_DIR / "lib/libgmp.a" => fun() do
	GMP_DIR:rmdir
	execute('wget -nv https://gmplib.org/download/gmp/gmp-{GMP_VERSION}.tar.bz2 -O- | tar xvjP')
	GMP_DIR:chdir
	execute("./configure --disable-shared --enable-static",
		'--prefix={EXT_DIR}',
		"ABI=32",
		"--without-man-pages",
		'CFLAGS=\"{LIBCFLAGS}\"',
		'LDFLAGS=\"{LIBLDFLAGS}\"'
	)
	execute("make clean")
	execute("make")
	execute("make install")
end

scope("gmp";) do
	LDFLAGS := old + ["Riva/Memory.rlib", "-d", '-x{GMP_LIB}', "-XGmp.exports"]
	PREBUILDS := old + [GMP_LIB]
	GMP_RLINK[riva_module("Gmp", [file("Gmp.o")])] => fun() do
		var Out := GMP_RLINK:open("w")
		Out:write('module(\"Gmp\")\nprefix(\"\")\n')
		var In := file("Gmp.exports"):open("r")
		loop
			var Line := while In:read
			Out:write(Line)
		end
		In:close
		Out:close
	end
end

scope("libc";) do
	GCC_HOST := shell("gcc -dumpmachine"):trim
	GCC_VERSION := shell("gcc -dumpversion"):trim
	LDFLAGS := old + ['-L/usr/lib/gcc/{GCC_HOST}/{GCC_VERSION}/', "-Z -d",
		"-xlibgcc.a", "-xlibgcc_eh.a", "-xlibc_nonshared.a", "-xlibstdc++.a",
		"-xlibsupc++.a", "libpthread.rlib", "-XGcc.exports"
	]
	GCC_RLINK[riva_module("Gcc", [file("Gcc.o")])] => fun() do
		var Out := GCC_RLINK:open("w")
		Out:write('module(\"Gcc\")\nprefix(\"\")\n')
		var In := file("Gcc.exports"):open("r")
		loop
			var Line := while In:read
			Out:write(Line)
		end
		In:close
		Out:close
	end
end
