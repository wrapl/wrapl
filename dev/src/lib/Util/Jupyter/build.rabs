JSON_VERSION := "3.4.0"
XEUS_VERSION := "0.15.0"
XTL_VERSION := "0.4.16"
CPPZMQ_VERSION := "4.3.0"
CRYPTOPP_VERSION := "7_0_0"

var JSON_LIB := file("include/nlohmann/json.hpp") => fun() do
	file("json"):rmdir:mkdir:chdir
	execute('wget https://github.com/nlohmann/json/archive/v{JSON_VERSION}.tar.gz -O- | tar xvzP --strip-components=1')
	file("json/build"):mkdir:chdir
	execute('CFLAGS=\"{CFLAGS}\" cmake -DCMAKE_INSTALL_PREFIX={BUILDDIR} BUILD_SHARED_LIBS=OFF BUILD_STATIC_LIBS=ON ..')
	execute('CFLAGS=\"{CFLAGS}\" cmake --build . --config Release --target install')
end
	
var XTL_LIB := file("include/xtl") => fun() do
	file("xtl"):rmdir:mkdir:chdir
	execute('wget https://github.com/QuantStack/xtl/archive/{XTL_VERSION}.tar.gz -O- | tar xvzP --strip-components=1')
	file("xtl/build"):mkdir:chdir
	execute('CFLAGS=\"{CFLAGS}\" cmake -DCMAKE_INSTALL_PREFIX={BUILDDIR} BUILD_SHARED_LIBS=OFF BUILD_STATIC_LIBS=ON ..')
	execute('CFLAGS=\"{CFLAGS}\" cmake --build . --config Release --target install')
end

var CPPZMQ_LIB := file("include/zmq.hpp") => fun() do
	file("cppzmq"):rmdir:mkdir:chdir
	execute('wget https://github.com/zeromq/cppzmq/archive/v{CPPZMQ_VERSION}.tar.gz -O- | tar xvzP --strip-components=1')
	file("cppzmq/build"):mkdir:chdir
	execute('CFLAGS=\"{CFLAGS}\" cmake -DCMAKE_INSTALL_PREFIX={BUILDDIR} BUILD_SHARED_LIBS=OFF BUILD_STATIC_LIBS=ON ..')
	execute('CFLAGS=\"{CFLAGS}\" cmake --build . --config Release --target install')
end

var CRYPTOPP_LIB := file("lib/libcryptopp.a") => fun() do
	file("cryptopp"):rmdir:mkdir:chdir
	execute('wget https://github.com/weidai11/cryptopp/archive/CRYPTOPP_{CRYPTOPP_VERSION}.tar.gz -O- | tar xzP --strip-components=1')
	execute('make static CFLAGS=\"{LIBCFLAGS}\" CXXFLAGS=\"{LIBCXXFLAGS}\"')
	execute('make install PREFIX={BUILDDIR}')
	file("Findcryptopp.cmake"):copy(file("lib/cmake/Findcryptopp.cmake"))
end

var XEUS_LIB := file("lib/libxeus.a")[JSON_LIB, XTL_LIB, CPPZMQ_LIB, CRYPTOPP_LIB] => fun() do
	file("xeus"):rmdir:mkdir:chdir
	execute('wget https://github.com/QuantStack/xeus/archive/{XEUS_VERSION}.tar.gz -O- | tar xvzP --strip-components=1')
	file("xeus/build"):mkdir:chdir
	execute('CFLAGS=\"{CFLAGS}\" cmake -DCMAKE_MODULE_PATH={BUILDDIR}/lib/cmake -DCMAKE_INSTALL_PREFIX={BUILDDIR} BUILD_SHARED_LIBS=OFF BUILD_STATIC_LIBS=ON ..')
	execute('CFLAGS=\"{CFLAGS}\" cmake --build . --config Release --target install')
end

file("Kernel.c"):scan("INCLUDES", :true)[XEUS_LIB]

--riva_module("Util/Jupyter/Kernel", [file("Kernel.o")], [XEUS_LIB])
wrapl_module("Util/Jupyter/Kernel")