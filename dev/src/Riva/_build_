GC_VERSION = "7.6.0"
ATOMIC_OPS_VERSION = "7.4.4"
local GC_DIR = file("gc-" .. GC_VERSION)
local ATOMIC_OPS_DIR = GC_DIR/"libatomic_ops"

CFG_OPTS = {
	"--enable-munmap=4",
	"--enable-large-config",
	"--enable-redirect-malloc",
	"--enable-shared=false",
	"--enable-static=true",
	"--enable-threads=posix",
	"--enable-parallel-mark",
	"--disable-gcj-support",
	"--prefix=/tmp",
	"--includedir=" .. file(""),
	"--libdir=" .. file("")
}

CFLAGS = extend(CFLAGS, "-m32", "-DGC_THREADS", "-DTHREAD_LOCAL_ALLOC", "-DUSE_COMPILER_TLS", "-O2")
LDFLAGS = extend(LDFLAGS, "-m32", "-pthread", "-ldl", "-lconfuse", "-lz", "-Wl,-E")

file("libgc.a"){GC_DIR, ATOMIC_OPS_DIR}:build(function()
	execute{"cd", GC_DIR, "&&",
		"./configure", CFG_OPTS, "CFLAGS=\"" .. stringify(CFLAGS) .. "\""
	}
	execute{"cd", GC_DIR, "&&",
		"make"
	}
	execute{"cd", GC_DIR, "&&",
		"make install"
	}
end)

GC_DIR:build(function()
	execute("wget -nv http://hboehm.info/gc/gc_source/gc-" .. GC_VERSION .. ".tar.gz -O- | tar xvzP")
end)

ATOMIC_OPS_DIR{GC_DIR}:build(function()
	execute{"mkdir", "-p", ATOMIC_OPS_DIR}
	execute{"cd", ATOMIC_OPS_DIR, "&&",
		"wget -nv http://www.ivmaisoft.com/_bin/atomic_ops/libatomic_ops-" .. ATOMIC_OPS_VERSION .. ".tar.gz -O- | tar xvzP --strip-components=1"
	}
end)

local Files = {
	file("config.o"),
	file("debug.o"),
	file("directory.o"),
	file("fileset.o"),
	file("libriva.o"),
	file("log.o"),
	file("log2.o"),
	file("main.o"),
	file("memory.o"),
	file("module.o"),
	file("native.o"),
	file("path.o"),
	file("riva.o"),
	file("stringtable.o"),
	file("symbol.o"),
	file("dynamic.o"),
	file("relocate.o"),
	file("exception.o"),
	file("util.o")
}

RIVA_CONF = OUT_BIN/"riva.conf"

RIVA_CONF:build(function(FileName)
	local File = io.open(tostring(FileName), "w")
	File:write([[
library = {
	/lib,
	/usr/lib,
	/usr/lib/i386-linux-gnu,
	/usr/local/lib,
]])
	File:write(OUT_LIB)
	File:write([[
}

parseargs = true

modules = {
	Wrapl/Loader
}
	]])
end)

RIVA{RIVA_CONF}

c_program(RIVA, Files, {file("libgc.a")})