local MAPGEN = file("Mapgen.riva")
local AUTOGEN = file("Autogen.log")
local API_XML = file("api.xml")

riva_program(MAPGEN, {file("Mapgen.o")})

file("TypeMap.c"){AUTOGEN, MAPGEN}:build(function()
	execute{RIVA, "-L.", "Mapgen"}
end)

file("TypeMap.o"){file("TypeMap.c")}:build(c_compile)

riva_module("Gir/TypeMap", {file("TypeMap.o")})

LDFLAGS = extend(LDFLAGS, "Std.rlib", "Riva.rlib", "Util.rlib", "Sys/Module.rlib", "Agg.rlib", "-L/usr/lib/", "-L/lib/")

API_XML{file("api.gir_list"), file("Convert.wrapl")}:build(function()
	execute{RIVA, "-L", file("Convert.wrapl"):dir(true)/"", "Convert", file("api.gir_list"), "api.xml"}
end)

AUTOGEN:scan("WraplSources", function()
	local Files = {}
	for FileName in lfs.dir(tostring(file("Main.wrapl"):dir(true))) do
		if string.sub(FileName, -6) == ".wrapl" then
			table.insert(Files, file(FileName))
		end
	end
	return Files
end)

AUTOGEN{API_XML}:build(function()
	execute{RIVA, "-L", file("Main.wrapl"):dir(true)/""}
end)

function detect_modules(Path)
	local Modules = meta("Modules"){file(""):dir():dir()/"Autogen.log", RLINK}

	DEFAULT{Modules:scan("Modules", function()
		stringify{LDFLAGS, CFLAGS}
		local Modules = {}
		for FileName in lfs.dir(tostring(file(""))) do
			print(FileName)
			if string.sub(FileName, -2) == ".c" then
				local Source = file(FileName)
				local Scan = Source:scan("INCLUDES", c_includes)
				local Object = Source % "o"
				Object{Source, Scan}:build(c_compile)
				local Script = Source % "rdef"
				local Module = (OUT_LIB/Path/string.sub(FileName, 1, -2)) % "riva"
				Module{RLINK, Script, Object}:build(function(Module)
					execute{RLINK, LDFLAGS, "-o", Module, Object, Script, "-v0", "-?", Script % "lst"}
				end)
				table.insert(Modules, Module)
			end
		end
		return Modules
	end)}
end

subdir("GObject")
subdir("Gio")
subdir("GLib")
subdir("Gdk")
subdir("GdkPixbuf")
subdir("Gtk")
subdir("GtkSource")
subdir("Pango")
subdir("cairo")

--[[mkdir(-p docs)

.DEFAULT: Autogen.log

DIRS = \
	GObject \
	GLib \
	Gio \
	Pango \
	Gdk \
	GdkX11 \
	GdkPixbuf \
	Gtk \
	GtkSource \
	Vte \
	GConf \
	Atk \
	GooCanvas \
	cairo

if $(file-exists Autogen.log)
	foreach(DIR, $(DIRS))
		mkdir(-p $(DIR))
		.SUBDIRS: $(DIR)
]]--