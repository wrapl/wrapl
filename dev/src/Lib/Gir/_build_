local MAPGEN = file("Mapgen.riva")
local AUTOGEN = file("Autogen.log")
local API_XML = file("api.xml")

riva_program(MAPGEN, {file("Mapgen.o")})

file("TypeMap.c"){RIVA, AUTOGEN, MAPGEN}:build(function()
	execute{RIVA, "-L.", "Mapgen"}
end)

file("TypeMap.o"){file("TypeMap.c")}:build(c_compile)

riva_module("Gir/TypeMap", {file("TypeMap.o")})

LDFLAGS = extend(LDFLAGS, "Std.rlib", "Riva.rlib", "Util.rlib", "Sys/Module.rlib", "Agg.rlib", "-L/usr/lib/", "-L/lib/")

API_XML{RIVA, WRAPL_MODULES, file("api.gir_list"), file("Convert.wrapl")}:build(function()
	execute{RIVA, "-L", file("Convert.wrapl"):dir(true)/"", "Convert", file("api.gir_list"), "api.xml"}
end)

AUTOGEN_SOURCES = {}

for FileName in lfs.dir(tostring(file("Main.wrapl"):dir(true))) do
	if string.sub(FileName, -6) == ".wrapl" then
		table.insert(AUTOGEN_SOURCES, file(FileName))
	end
end

AUTOGEN{RIVA, AUTOGEN_SOURCES, API_XML}:build(function()
	execute{RIVA, "-L", file("Main.wrapl"):dir(true)/"", "--", file(""), GEN_INC, GEN_LIB}
end)

function detect_modules(Path)
	mkdir(OUT_LIB/Path)
	local DetectedModules = AUTOGEN:scan(Path, function()
		local _ = VERSION
		local Modules = {}
		for FileName in lfs.dir(tostring(file(""))) do
			if string.sub(FileName, -2) == ".c" then
				local Source = file(FileName)
				local Scan = Source:scan("INCLUDES", c_includes)
				local Object = Source % "o"
				Object{Source, Scan, TYPEMAP}:build(c_compile)
				local Script = Source % "rdef"
				local Name = Path .. "/" .. string.sub(FileName, 1, -3)
				local Module = OUT_LIB/Name % "riva"
				local Doc = GEN_DOC/Name % "xml"
				Module{RLINK, Script, Object}:build(function(Module)
					execute{RLINK, LDFLAGS, "-o", Module, Object, Script, "-v0", "-?", Script % "lst"}
				end)
				Doc{RDOC, RIVA, Source}:build(function(Doc)
					execute{RIVA, "-tWrapl", RDOC, "-o", Doc, CFLAGS, Name, Source}
				end)
				table.insert(Modules, Module)
				table.insert(Modules, Doc)
			end
		end
		return Modules
	end)
	DEFAULT{DetectedModules}
end

subdir("GObject")
subdir("Gio")
subdir("GLib")
subdir("Gdk")
subdir("GdkPixbuf")
subdir("Gtk")
subdir("GtkSource")
subdir("Pango")
subdir("PangoCairo")
subdir("Cairo")
subdir("Gda")
subdir("Soup")
subdir("GooCanvas")
subdir("Lasem")

--[[mkdir(-p docs)

.DEFAULT: Autogen.log

DIRS = \
	GObject \
	GLib \
	Gio \
	Pango \
	Gdk \
	GdkX11 \
	GdkPixbuf \
	Gtk \
	GtkSource \
	Vte \
	GConf \
	Atk \
	GooCanvas \
	cairo

if $(file-exists Autogen.log)
	foreach(DIR, $(DIRS))
		mkdir(-p $(DIR))
		.SUBDIRS: $(DIR)
]]--