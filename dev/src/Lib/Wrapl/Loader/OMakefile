LDFLAGS += -d Std.rlib Agg.rlib Riva.rlib Util.rlib Sys$(DIRSEP)Module.rlib IO$(DIRSEP)Stream.rlib IO$(DIRSEP)File.rlib
CFLAGS += -x c++ -fpermissive -fno-exceptions -fno-rtti -Wno-non-virtual-dtor -I$(dirname $(file system.h))

INCLUDES += $(OBJ_DIR)Riva

if $(not $(defined PACKAGE))
	LDFLAGS += Udis.rlib
	export

FILES[] =
	assembler
	bitset
	compiler
	debugger
	dso_handle
	integertable
	missing
	parser
	scanner
	stringtable
	system
	wrapl

LocalCGeneratedFiles(assembler-internal.c keywords.c)

setenv(LUA_PATH, $(DEV_BIN)?.lua)
$(file assembler-internal.c): $(file assembler-internal.dasc)
	lua $(DEV_BIN)dynasm.lua $(file assembler-internal.dasc) > $(file assembler-internal.c)

$(file keywords.c): $(file keywords.lst)
	gperf -S 3 -L C++ -C -t -K Name -Z keyword -H hash -N lookup $(file keywords.lst) > $(file keywords.c)

system$(EXT_OBJ): build

build: :value: $(shell svnversion -n ../../../..)
	svnversion -n ../../../.. > build

RivaModule(Wrapl/Loader, $(FILES))
