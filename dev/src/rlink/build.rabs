UDIS_VERSION := "1.7.2"

UDIS_LIB => fun() do
	var UDIS_DIR := file('udis86-{UDIS_VERSION}')
	var UDIS_URL := 'https://github.com/vmt/udis86/archive/v{UDIS_VERSION}.tar.gz'
	UDIS_DIR:rmdir
	execute("wget -nv", UDIS_URL, "-O- | tar xvzP")
	UDIS_DIR:chdir
	execute("./autogen.sh")
	execute("./configure --disable-shared --enable-static",
		'--prefix={EXT_DIR}',
		"--without-man-pages",
		'--with-python=python2',
		'CFLAGS=\"{LIBCFLAGS}\"',
		'LDFLAGS=\"{LIBLDFLAGS}\"'
	)
	execute("make mostlyclean")
	execute("make TARGET_LIBS=\"static\"")
	execute("make install")
end

LDFLAGS := old + ["-L.", "-lz", "-ldl", "-g", "-pthread"]
CFLAGS := old + ["-DUSE_UDIS", "-g", "-DLINUX", "-std=gnu99", "-DPACKAGE", "-DPACKAGE_VERSION", '-I{EXT_DIR / "include"}']
PREBUILDS := old + [UDIS_LIB]

var MINILANG_LIB := subdir("minilang")."LIBMINILANG"

var Objects := [file("rlink.o")]

if PLATFORM = "Linux" then
	LDFLAGS := old + ["-lbfd"]
	c_program(RLINK, Objects, [UDIS_LIB, MINILANG_LIB, GC_LIB])
elseif PLATFORM = "Darwin" then
	BINUTILS_VERSION := "2.30"
	BINUTILS_URL := 'https://ftp.gnu.org/gnu/binutils/binutils-{BINUTILS_VERSION}.tar.gz'
	BINUTILS_DIR := file('binutils-{BINUTILS_VERSION}')
	file("lib/libbfd.a") => fun() do
		execute("wget - nv", BINUTILS_URL, "-O- | tar xvzP")
		execute("cd", BINUTILS_DIR, "&&",
			"./configure --build=i386-apple-darwin16.6.0",
			'--prefix={EXT_DIR}',
			"--without-man-pages",
			'CFLAGS=\"{LIBCFLAGS}\"',
			'LDFLAGS=\"{LIBLDFLAGS}\"'
		)
		execute("cd", BINUTILS_DIR, "&& make")
		execute("cd", BINUTILS_DIR, "&& make install")
	end
	CFLAGS := old + ['-I{file("include")}']
	c_program(RLINK, Objects, [UDIS_LIB, file("lib/libbfd.a"), MINILANG_LIB, GC_LIB])
end

